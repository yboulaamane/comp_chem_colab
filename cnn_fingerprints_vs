{"cells":[{"cell_type":"code","source":["!pip install rdkit-pypi"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"N3P93t0oGidR","executionInfo":{"status":"ok","timestamp":1659429745377,"user_tz":-180,"elapsed":3308,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}},"outputId":"7bfdd7ec-1606-4242-9ac2-60ded8b6f5c6"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: rdkit-pypi in /usr/local/lib/python3.7/dist-packages (2022.3.4)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.7/dist-packages (from rdkit-pypi) (1.21.6)\n","Requirement already satisfied: Pillow in /usr/local/lib/python3.7/dist-packages (from rdkit-pypi) (7.1.2)\n"]}]},{"cell_type":"code","source":["import os\n","import pandas as pd\n","import numpy as np\n","import rdkit.Chem as Chem\n","from rdkit.Chem import Draw\n","from rdkit.Chem.Draw import DrawingOptions\n","import tensorflow as tf2\n","import PIL \n","import PIL.Image"],"metadata":{"id":"SeqiaoeCGhPI","executionInfo":{"status":"ok","timestamp":1659429745379,"user_tz":-180,"elapsed":23,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["#MAO-B\n","x=pd.read_csv(\"maob.csv\", sep=';')"],"metadata":{"id":"9SFLT7bL8OhR","executionInfo":{"status":"ok","timestamp":1659429745827,"user_tz":-180,"elapsed":468,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["x.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"S8N8l-8i8Ojf","executionInfo":{"status":"ok","timestamp":1659429745828,"user_tz":-180,"elapsed":46,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}},"outputId":"f09c7683-0983-4894-caef-0f2c9c0b0b18"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(5067, 45)"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["x.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qMo6Qvyk8Olj","executionInfo":{"status":"ok","timestamp":1659429745828,"user_tz":-180,"elapsed":39,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}},"outputId":"aac5cd90-8cc6-4a4e-d9eb-d1eff145ed42"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Molecule ChEMBL ID', 'Molecule Name', 'Molecule Max Phase',\n","       'Molecular Weight', '#RO5 Violations', 'AlogP', 'Compound Key',\n","       'Smiles', 'Standard Type', 'Standard Relation', 'Standard Value',\n","       'Standard Units', 'pChEMBL Value', 'Data Validity Comment', 'Comment',\n","       'Uo Units', 'Ligand Efficiency BEI', 'Ligand Efficiency LE',\n","       'Ligand Efficiency LLE', 'Ligand Efficiency SEI', 'Potential Duplicate',\n","       'Assay ChEMBL ID', 'Assay Description', 'Assay Type', 'BAO Format ID',\n","       'BAO Label', 'Assay Organism', 'Assay Tissue ChEMBL ID',\n","       'Assay Tissue Name', 'Assay Cell Type', 'Assay Subcellular Fraction',\n","       'Assay Parameters', 'Assay Variant Accession', 'Assay Variant Mutation',\n","       'Target ChEMBL ID', 'Target Name', 'Target Organism', 'Target Type',\n","       'Document ChEMBL ID', 'Source ID', 'Source Description',\n","       'Document Journal', 'Document Year', 'Cell ChEMBL ID', 'Properties'],\n","      dtype='object')"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["x=x[x['pChEMBL Value']>0]"],"metadata":{"id":"PJMk4ppv59Dl","executionInfo":{"status":"ok","timestamp":1659429745829,"user_tz":-180,"elapsed":30,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["x.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IEvM8ysA59BL","executionInfo":{"status":"ok","timestamp":1659429745829,"user_tz":-180,"elapsed":28,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}},"outputId":"7502fecc-ae59-456e-b2b5-eff7c23515e8"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(4065, 45)"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["x=x[['Molecule ChEMBL ID', 'Smiles', 'Standard Type', 'Standard Relation', 'Standard Value', 'Standard Units']]"],"metadata":{"id":"XXcC2uhk58_N","executionInfo":{"status":"ok","timestamp":1659429745830,"user_tz":-180,"elapsed":21,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["x=x[x['Smiles'].notna()]"],"metadata":{"id":"sm_La-3C5882","executionInfo":{"status":"ok","timestamp":1659429745831,"user_tz":-180,"elapsed":20,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["x=x[x['Standard Value'].notna()]"],"metadata":{"id":"2FoTIQP5586b","executionInfo":{"status":"ok","timestamp":1659429745831,"user_tz":-180,"elapsed":19,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["x.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wZRyz1h36srt","executionInfo":{"status":"ok","timestamp":1659429745832,"user_tz":-180,"elapsed":19,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}},"outputId":"b87e9142-9490-47d3-cfca-818f38020c53"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(4065, 6)"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["x['Molecule ChEMBL ID'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qzD99uli7eUt","executionInfo":{"status":"ok","timestamp":1659429745833,"user_tz":-180,"elapsed":15,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}},"outputId":"b4bf14b2-2c39-4288-c560-3357d143acf2"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["CHEMBL972        92\n","CHEMBL92401      73\n","CHEMBL8706       60\n","CHEMBL887        47\n","CHEMBL396778     33\n","                 ..\n","CHEMBL142916      1\n","CHEMBL323988      1\n","CHEMBL3800320     1\n","CHEMBL2088301     1\n","CHEMBL4284475     1\n","Name: Molecule ChEMBL ID, Length: 3428, dtype: int64"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["x['newValue']=x[['Molecule ChEMBL ID', 'Smiles', 'Standard Type', 'Standard Relation', 'Standard Value', 'Standard Units']].groupby(['Molecule ChEMBL ID']).transform('mean')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DUIsWmZq7eSn","executionInfo":{"status":"ok","timestamp":1659429746540,"user_tz":-180,"elapsed":719,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}},"outputId":"26756b00-e77b-443a-cad0-9be5a5c61460"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:1: FutureWarning: Dropping invalid columns in DataFrameGroupBy.transform is deprecated. In a future version, a TypeError will be raised. Before calling .transform, select only columns which should be valid for the transforming function.\n","  \"\"\"Entry point for launching an IPython kernel.\n"]}]},{"cell_type":"code","source":["x.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":285},"id":"16eqKN-W7eP7","executionInfo":{"status":"ok","timestamp":1659429747113,"user_tz":-180,"elapsed":579,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}},"outputId":"91eb83c4-95a5-4779-d093-286ea7125d60"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Molecule ChEMBL ID                                             Smiles  \\\n","0      CHEMBL4082300            Cc1c(C#N)c(=O)oc2cc(OCc3ccc(F)cc3)ccc12   \n","1      CHEMBL4169343  Cc1ccccc1NC(=S)N/N=C/c1ccc(-n2nc3c(c2C)N(C)S(=...   \n","2      CHEMBL4167004  Cc1ccc(NC(=S)N/N=C/c2ccc(-n3nc4c(c3C)N(C)S(=O)...   \n","3      CHEMBL4171534  CN1c2c(nn(-c3ccc(/C=N/NC(=S)Nc4ccccc4)cc3)c2-c...   \n","4      CHEMBL4172754  CN1c2c(nn(-c3ccc(/C=N/NC(=S)NCN4CCOCC4)cc3)c2-...   \n","\n","  Standard Type Standard Relation  Standard Value Standard Units  newValue  \n","0          IC50               '='             2.2             nM       2.2  \n","1          IC50               '='          3130.0             nM    3130.0  \n","2          IC50               '='           110.0             nM     110.0  \n","3          IC50               '='          2490.0             nM    2490.0  \n","4          IC50               '='          2990.0             nM    2990.0  "],"text/html":["\n","  <div id=\"df-ff18fdb8-f696-4065-8067-c717cd24c3b8\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Molecule ChEMBL ID</th>\n","      <th>Smiles</th>\n","      <th>Standard Type</th>\n","      <th>Standard Relation</th>\n","      <th>Standard Value</th>\n","      <th>Standard Units</th>\n","      <th>newValue</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>CHEMBL4082300</td>\n","      <td>Cc1c(C#N)c(=O)oc2cc(OCc3ccc(F)cc3)ccc12</td>\n","      <td>IC50</td>\n","      <td>'='</td>\n","      <td>2.2</td>\n","      <td>nM</td>\n","      <td>2.2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>CHEMBL4169343</td>\n","      <td>Cc1ccccc1NC(=S)N/N=C/c1ccc(-n2nc3c(c2C)N(C)S(=...</td>\n","      <td>IC50</td>\n","      <td>'='</td>\n","      <td>3130.0</td>\n","      <td>nM</td>\n","      <td>3130.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>CHEMBL4167004</td>\n","      <td>Cc1ccc(NC(=S)N/N=C/c2ccc(-n3nc4c(c3C)N(C)S(=O)...</td>\n","      <td>IC50</td>\n","      <td>'='</td>\n","      <td>110.0</td>\n","      <td>nM</td>\n","      <td>110.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>CHEMBL4171534</td>\n","      <td>CN1c2c(nn(-c3ccc(/C=N/NC(=S)Nc4ccccc4)cc3)c2-c...</td>\n","      <td>IC50</td>\n","      <td>'='</td>\n","      <td>2490.0</td>\n","      <td>nM</td>\n","      <td>2490.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>CHEMBL4172754</td>\n","      <td>CN1c2c(nn(-c3ccc(/C=N/NC(=S)NCN4CCOCC4)cc3)c2-...</td>\n","      <td>IC50</td>\n","      <td>'='</td>\n","      <td>2990.0</td>\n","      <td>nM</td>\n","      <td>2990.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ff18fdb8-f696-4065-8067-c717cd24c3b8')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ff18fdb8-f696-4065-8067-c717cd24c3b8 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ff18fdb8-f696-4065-8067-c717cd24c3b8');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["x['Standard Units'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pRBwU5CW7eNu","executionInfo":{"status":"ok","timestamp":1659429747114,"user_tz":-180,"elapsed":80,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}},"outputId":"bed65aa8-a2a1-4aab-8d25-c27bc3b190d7"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["nM    4065\n","Name: Standard Units, dtype: int64"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["x=x.sort_values('newValue', ascending=True)"],"metadata":{"id":"FwTfGnP07eL0","executionInfo":{"status":"ok","timestamp":1659429747116,"user_tz":-180,"elapsed":73,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}}},"execution_count":20,"outputs":[]},{"cell_type":"code","source":["x=x.drop_duplicates('Molecule ChEMBL ID')"],"metadata":{"id":"cu6QJAOE7eJZ","executionInfo":{"status":"ok","timestamp":1659429747117,"user_tz":-180,"elapsed":72,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}}},"execution_count":21,"outputs":[]},{"cell_type":"code","source":["x.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vWvGfogQ7eFU","executionInfo":{"status":"ok","timestamp":1659429747118,"user_tz":-180,"elapsed":72,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}},"outputId":"626b2cde-ad50-4a56-f8e1-4832475915c1"},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(3428, 7)"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["actives=x.loc[x[\"newValue\"]<=316]"],"metadata":{"id":"Eh6N4Apv8q_t","executionInfo":{"status":"ok","timestamp":1659429747120,"user_tz":-180,"elapsed":68,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}}},"execution_count":23,"outputs":[]},{"cell_type":"code","source":["actives.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Z2gYdXco8q9S","executionInfo":{"status":"ok","timestamp":1659429747121,"user_tz":-180,"elapsed":67,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}},"outputId":"9b12ef24-7ebc-4639-8a7e-56424b2b5088"},"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1065, 7)"]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["inactives=x.loc[x[\"newValue\"]>=10000]"],"metadata":{"id":"yR1k8hyO8q7Q","executionInfo":{"status":"ok","timestamp":1659429747123,"user_tz":-180,"elapsed":63,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}}},"execution_count":25,"outputs":[]},{"cell_type":"code","source":["inactives.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"l0qWaMSv8q5Z","executionInfo":{"status":"ok","timestamp":1659429747124,"user_tz":-180,"elapsed":62,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}},"outputId":"fdb2c543-627c-4445-8595-32c13e07681f"},"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(879, 7)"]},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["actives[\"label\"]=1\n","inactives[\"label\"] =0"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EtAIwGCV8q3f","executionInfo":{"status":"ok","timestamp":1659429747125,"user_tz":-180,"elapsed":58,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}},"outputId":"01a96b94-ae29-4938-aa4f-a9fb85b97487"},"execution_count":27,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:1: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \"\"\"Entry point for launching an IPython kernel.\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:2: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \n"]}]},{"cell_type":"code","source":["actives.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":285},"id":"CHu5Dsss8q1S","executionInfo":{"status":"ok","timestamp":1659429747127,"user_tz":-180,"elapsed":53,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}},"outputId":"6ca1d0d4-1d0f-45ff-87ab-baed115d0096"},"execution_count":28,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Molecule ChEMBL ID                                   Smiles  \\\n","88         CHEMBL348961  Cc1cc2c(nn1)-c1cc(OCCCC(F)(F)F)ccc1C2=O   \n","4491      CHEMBL4129303       Cc1ccc2oc(=O)c(-c3cccc(Br)c3)cc2c1   \n","1612      CHEMBL3319268   O=C(Nc1ccc(Cl)c(Cl)c1)c1ccc2[nH]ccc2c1   \n","3946      CHEMBL1835228          Cc1ccc(-c2cc3cc(C)ccc3oc2=O)cc1   \n","2067       CHEMBL414637            O=C1CCc2cc(OCCCC(F)(F)F)ccc21   \n","\n","     Standard Type Standard Relation  Standard Value Standard Units  newValue  \\\n","88            IC50               '='           0.014             nM   0.01400   \n","4491          IC50               '='           0.134             nM   0.13400   \n","1612          IC50               '='           0.227             nM   0.22700   \n","3946          IC50               '='           0.310             nM   0.30925   \n","2067          IC50               '='           0.318             nM   0.31800   \n","\n","      label  \n","88        1  \n","4491      1  \n","1612      1  \n","3946      1  \n","2067      1  "],"text/html":["\n","  <div id=\"df-eeee28d6-6c88-49ca-823e-6176b7e7e41e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Molecule ChEMBL ID</th>\n","      <th>Smiles</th>\n","      <th>Standard Type</th>\n","      <th>Standard Relation</th>\n","      <th>Standard Value</th>\n","      <th>Standard Units</th>\n","      <th>newValue</th>\n","      <th>label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>88</th>\n","      <td>CHEMBL348961</td>\n","      <td>Cc1cc2c(nn1)-c1cc(OCCCC(F)(F)F)ccc1C2=O</td>\n","      <td>IC50</td>\n","      <td>'='</td>\n","      <td>0.014</td>\n","      <td>nM</td>\n","      <td>0.01400</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4491</th>\n","      <td>CHEMBL4129303</td>\n","      <td>Cc1ccc2oc(=O)c(-c3cccc(Br)c3)cc2c1</td>\n","      <td>IC50</td>\n","      <td>'='</td>\n","      <td>0.134</td>\n","      <td>nM</td>\n","      <td>0.13400</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1612</th>\n","      <td>CHEMBL3319268</td>\n","      <td>O=C(Nc1ccc(Cl)c(Cl)c1)c1ccc2[nH]ccc2c1</td>\n","      <td>IC50</td>\n","      <td>'='</td>\n","      <td>0.227</td>\n","      <td>nM</td>\n","      <td>0.22700</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3946</th>\n","      <td>CHEMBL1835228</td>\n","      <td>Cc1ccc(-c2cc3cc(C)ccc3oc2=O)cc1</td>\n","      <td>IC50</td>\n","      <td>'='</td>\n","      <td>0.310</td>\n","      <td>nM</td>\n","      <td>0.30925</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2067</th>\n","      <td>CHEMBL414637</td>\n","      <td>O=C1CCc2cc(OCCCC(F)(F)F)ccc21</td>\n","      <td>IC50</td>\n","      <td>'='</td>\n","      <td>0.318</td>\n","      <td>nM</td>\n","      <td>0.31800</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-eeee28d6-6c88-49ca-823e-6176b7e7e41e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-eeee28d6-6c88-49ca-823e-6176b7e7e41e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-eeee28d6-6c88-49ca-823e-6176b7e7e41e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["combined=pd.concat( [actives, inactives], axis=0)"],"metadata":{"id":"id1eq9628qzH","executionInfo":{"status":"ok","timestamp":1659429747128,"user_tz":-180,"elapsed":50,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}}},"execution_count":29,"outputs":[]},{"cell_type":"code","source":["combined.tail()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":285},"id":"aFOCtdD78qw3","executionInfo":{"status":"ok","timestamp":1659429747129,"user_tz":-180,"elapsed":50,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}},"outputId":"c4b84566-834e-4c07-f555-8a4c06c2b683"},"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Molecule ChEMBL ID                                       Smiles  \\\n","1506      CHEMBL4458596              O=C1Cc2cc(OCCc3ccc(F)cc3)ccc2N1   \n","4540      CHEMBL4577822      CCn1c(=O)[nH]c2ccc(OCCOc3cccc(F)c3)cc21   \n","375       CHEMBL4551886  CCn1c(=O)[nH]c2ccc(OCCOc3ccc(C(C)C)cc3)cc21   \n","2774      CHEMBL4445270        CC1(C)C(=O)Nc2ccc(OCc3cccc(Cl)c3)cc21   \n","4538      CHEMBL4572841        CC(C)C1C(=O)Nc2ccc(OCc3cccc(F)c3)cc21   \n","\n","     Standard Type Standard Relation  Standard Value Standard Units  newValue  \\\n","1506          IC50               '='        190100.0             nM  190100.0   \n","4540          IC50               '='        190500.0             nM  190500.0   \n","375           IC50               '='        277600.0             nM  277600.0   \n","2774          IC50               '='        279000.0             nM  279000.0   \n","4538          IC50               '='        396600.0             nM  396600.0   \n","\n","      label  \n","1506      0  \n","4540      0  \n","375       0  \n","2774      0  \n","4538      0  "],"text/html":["\n","  <div id=\"df-50c6b209-8ebd-4dd2-8102-0efb8ce9442a\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Molecule ChEMBL ID</th>\n","      <th>Smiles</th>\n","      <th>Standard Type</th>\n","      <th>Standard Relation</th>\n","      <th>Standard Value</th>\n","      <th>Standard Units</th>\n","      <th>newValue</th>\n","      <th>label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1506</th>\n","      <td>CHEMBL4458596</td>\n","      <td>O=C1Cc2cc(OCCc3ccc(F)cc3)ccc2N1</td>\n","      <td>IC50</td>\n","      <td>'='</td>\n","      <td>190100.0</td>\n","      <td>nM</td>\n","      <td>190100.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4540</th>\n","      <td>CHEMBL4577822</td>\n","      <td>CCn1c(=O)[nH]c2ccc(OCCOc3cccc(F)c3)cc21</td>\n","      <td>IC50</td>\n","      <td>'='</td>\n","      <td>190500.0</td>\n","      <td>nM</td>\n","      <td>190500.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>375</th>\n","      <td>CHEMBL4551886</td>\n","      <td>CCn1c(=O)[nH]c2ccc(OCCOc3ccc(C(C)C)cc3)cc21</td>\n","      <td>IC50</td>\n","      <td>'='</td>\n","      <td>277600.0</td>\n","      <td>nM</td>\n","      <td>277600.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2774</th>\n","      <td>CHEMBL4445270</td>\n","      <td>CC1(C)C(=O)Nc2ccc(OCc3cccc(Cl)c3)cc21</td>\n","      <td>IC50</td>\n","      <td>'='</td>\n","      <td>279000.0</td>\n","      <td>nM</td>\n","      <td>279000.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4538</th>\n","      <td>CHEMBL4572841</td>\n","      <td>CC(C)C1C(=O)Nc2ccc(OCc3cccc(F)c3)cc21</td>\n","      <td>IC50</td>\n","      <td>'='</td>\n","      <td>396600.0</td>\n","      <td>nM</td>\n","      <td>396600.0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-50c6b209-8ebd-4dd2-8102-0efb8ce9442a')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-50c6b209-8ebd-4dd2-8102-0efb8ce9442a button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-50c6b209-8ebd-4dd2-8102-0efb8ce9442a');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":30}]},{"cell_type":"code","source":["combined[[\"Smiles\", \"label\"]].to_csv(\"maob_binary.smi\", sep=\"\\t\", header=None, index=None)"],"metadata":{"id":"vJvJbwAnAzPa","executionInfo":{"status":"ok","timestamp":1659429747130,"user_tz":-180,"elapsed":47,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}}},"execution_count":31,"outputs":[]},{"cell_type":"code","source":["from rdkit import Chem\n","from rdkit.Chem import AllChem\n","from rdkit.Chem.Draw import IPythonConsole"],"metadata":{"id":"nScHe2PVAzNV","executionInfo":{"status":"ok","timestamp":1659429747132,"user_tz":-180,"elapsed":48,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}}},"execution_count":32,"outputs":[]},{"cell_type":"code","source":["t1=Chem.SmilesMolSupplier(\"maob_binary.smi\", delimiter=\"\\t\", titleLine=False)"],"metadata":{"id":"zy02eBZmAzLM","executionInfo":{"status":"ok","timestamp":1659429747133,"user_tz":-180,"elapsed":48,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}}},"execution_count":33,"outputs":[]},{"cell_type":"code","source":["FP,IDs=[],[]\n","for i, mol in enumerate(t1):\n","  if mol is not None:\n","    FP.append(AllChem.GetMorganFingerprintAsBitVect(mol, 2, nBits=2048))\n","    IDs.append(mol.GetProp(\"_Name\"))"],"metadata":{"id":"_RQbGxzbAzJE","executionInfo":{"status":"ok","timestamp":1659429747891,"user_tz":-180,"elapsed":804,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}}},"execution_count":34,"outputs":[]},{"cell_type":"code","source":["x1=pd.read_csv(\"maob_binary.smi\", sep=\"\\t\", header=None)\n","x1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"7Gu4g-Q4AzFo","executionInfo":{"status":"ok","timestamp":1659429747893,"user_tz":-180,"elapsed":17,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}},"outputId":"6b8bc3c1-f2c7-4566-ff1c-51f6eefa17a8"},"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                                0  1\n","0         Cc1cc2c(nn1)-c1cc(OCCCC(F)(F)F)ccc1C2=O  1\n","1              Cc1ccc2oc(=O)c(-c3cccc(Br)c3)cc2c1  1\n","2          O=C(Nc1ccc(Cl)c(Cl)c1)c1ccc2[nH]ccc2c1  1\n","3                 Cc1ccc(-c2cc3cc(C)ccc3oc2=O)cc1  1\n","4                   O=C1CCc2cc(OCCCC(F)(F)F)ccc21  1\n","...                                           ... ..\n","1939              O=C1Cc2cc(OCCc3ccc(F)cc3)ccc2N1  0\n","1940      CCn1c(=O)[nH]c2ccc(OCCOc3cccc(F)c3)cc21  0\n","1941  CCn1c(=O)[nH]c2ccc(OCCOc3ccc(C(C)C)cc3)cc21  0\n","1942        CC1(C)C(=O)Nc2ccc(OCc3cccc(Cl)c3)cc21  0\n","1943        CC(C)C1C(=O)Nc2ccc(OCc3cccc(F)c3)cc21  0\n","\n","[1944 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-211eda76-a968-4538-8d1f-eefa39f6823f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Cc1cc2c(nn1)-c1cc(OCCCC(F)(F)F)ccc1C2=O</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Cc1ccc2oc(=O)c(-c3cccc(Br)c3)cc2c1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>O=C(Nc1ccc(Cl)c(Cl)c1)c1ccc2[nH]ccc2c1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Cc1ccc(-c2cc3cc(C)ccc3oc2=O)cc1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>O=C1CCc2cc(OCCCC(F)(F)F)ccc21</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1939</th>\n","      <td>O=C1Cc2cc(OCCc3ccc(F)cc3)ccc2N1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1940</th>\n","      <td>CCn1c(=O)[nH]c2ccc(OCCOc3cccc(F)c3)cc21</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1941</th>\n","      <td>CCn1c(=O)[nH]c2ccc(OCCOc3ccc(C(C)C)cc3)cc21</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1942</th>\n","      <td>CC1(C)C(=O)Nc2ccc(OCc3cccc(Cl)c3)cc21</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1943</th>\n","      <td>CC(C)C1C(=O)Nc2ccc(OCc3cccc(F)c3)cc21</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1944 rows × 2 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-211eda76-a968-4538-8d1f-eefa39f6823f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-211eda76-a968-4538-8d1f-eefa39f6823f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-211eda76-a968-4538-8d1f-eefa39f6823f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":35}]},{"cell_type":"code","source":["train_df=np.asarray(FP, dtype=np.int32)\n","labels=np.asarray(IDs, dtype=np.float64).reshape(-1,1)"],"metadata":{"id":"aLZ8ftbCAzEM","executionInfo":{"status":"ok","timestamp":1659429751061,"user_tz":-180,"elapsed":3180,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}}},"execution_count":36,"outputs":[]},{"cell_type":"code","source":["combined=np.concatenate([train_df,labels], axis=1)"],"metadata":{"id":"jqf_KUZ7AzCD","executionInfo":{"status":"ok","timestamp":1659429751064,"user_tz":-180,"elapsed":33,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}}},"execution_count":37,"outputs":[]},{"cell_type":"code","source":["combined.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uNKZTfYSAzAK","executionInfo":{"status":"ok","timestamp":1659429751065,"user_tz":-180,"elapsed":31,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}},"outputId":"6e3baad7-f920-4c34-8fbf-5881fe7dc313"},"execution_count":38,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1944, 2049)"]},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["np.save(\"maob.npy\", combined)"],"metadata":{"id":"eVtU14Z_Ay-a","executionInfo":{"status":"ok","timestamp":1659429751067,"user_tz":-180,"elapsed":27,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}}},"execution_count":39,"outputs":[]},{"cell_type":"code","source":["train_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7sU0a62-FsHk","executionInfo":{"status":"ok","timestamp":1659429751068,"user_tz":-180,"elapsed":26,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}},"outputId":"05514306-7a88-4a71-d332-618c721bbd0a"},"execution_count":40,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0, 1, 0, ..., 0, 0, 0],\n","       [0, 0, 0, ..., 0, 0, 0],\n","       [0, 0, 0, ..., 0, 0, 0],\n","       ...,\n","       [0, 1, 0, ..., 0, 0, 0],\n","       [0, 0, 0, ..., 0, 0, 0],\n","       [0, 1, 0, ..., 0, 0, 0]], dtype=int32)"]},"metadata":{},"execution_count":40}]},{"cell_type":"code","source":["train=np.load(\"maob.npy\", allow_pickle=True)"],"metadata":{"id":"ozW4Ggi9Ay7_","executionInfo":{"status":"ok","timestamp":1659429751069,"user_tz":-180,"elapsed":20,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}}},"execution_count":41,"outputs":[]},{"cell_type":"code","source":["np.random.shuffle(train)"],"metadata":{"id":"L3-k80AyFhHb","executionInfo":{"status":"ok","timestamp":1659429751073,"user_tz":-180,"elapsed":23,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}}},"execution_count":42,"outputs":[]},{"cell_type":"code","source":["X,y=train[0:,0:2048],train[0:,2048:2049]"],"metadata":{"id":"F9ymwKG4FhFI","executionInfo":{"status":"ok","timestamp":1659429751075,"user_tz":-180,"elapsed":24,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}}},"execution_count":43,"outputs":[]},{"cell_type":"code","source":["y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nd2owZ3bFhC4","executionInfo":{"status":"ok","timestamp":1659429751551,"user_tz":-180,"elapsed":498,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}},"outputId":"ced16073-0568-4e69-b858-52499bdf18ef"},"execution_count":44,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1.],\n","       [1.],\n","       [1.],\n","       ...,\n","       [1.],\n","       [0.],\n","       [1.]])"]},"metadata":{},"execution_count":44}]},{"cell_type":"code","source":["import tensorflow as tf\n","import keras\n","from keras.models import Sequential\n","from keras import layers\n","from sklearn.preprocessing import LabelEncoder\n","from imblearn.over_sampling import RandomOverSampler\n","from imblearn.under_sampling import RandomUnderSampler\n","from keras.layers import Dense"],"metadata":{"id":"RyvZ90T5FhAx","executionInfo":{"status":"ok","timestamp":1659429752751,"user_tz":-180,"elapsed":1210,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}}},"execution_count":45,"outputs":[]},{"cell_type":"code","source":["encoder=LabelEncoder()\n","encoder.fit(y)\n","y=encoder.transform(y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lmfxM9XeFg-4","executionInfo":{"status":"ok","timestamp":1659429752753,"user_tz":-180,"elapsed":49,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}},"outputId":"b6f9ec8e-8382-4f1b-af82-881e1a408287"},"execution_count":46,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/preprocessing/_label.py:98: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n","/usr/local/lib/python3.7/dist-packages/sklearn/preprocessing/_label.py:133: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n"]}]},{"cell_type":"code","source":["y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"91MBPl2EFg8z","executionInfo":{"status":"ok","timestamp":1659429752754,"user_tz":-180,"elapsed":44,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}},"outputId":"0c12641d-1064-43f9-94ed-fc2f208599d8"},"execution_count":47,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1, 1, 1, ..., 1, 0, 1])"]},"metadata":{},"execution_count":47}]},{"cell_type":"code","source":["ros = RandomOverSampler(random_state=0)\n","X,y=ros.fit_resample(X,y)"],"metadata":{"id":"puMBeXNeFg64","executionInfo":{"status":"ok","timestamp":1659429752755,"user_tz":-180,"elapsed":35,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}}},"execution_count":48,"outputs":[]},{"cell_type":"code","source":["y.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VFfGQwC8Fg4U","executionInfo":{"status":"ok","timestamp":1659429752757,"user_tz":-180,"elapsed":36,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}},"outputId":"8431a91a-af4b-4e16-9577-fa201e578f2b"},"execution_count":49,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(2130,)"]},"metadata":{},"execution_count":49}]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split"],"metadata":{"id":"Gbs2fNdAIFnN","executionInfo":{"status":"ok","timestamp":1659429752758,"user_tz":-180,"elapsed":30,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}}},"execution_count":50,"outputs":[]},{"cell_type":"code","source":["X_train, X_test, y_train, y_test=train_test_split(X,y, test_size=0.25, random_state=42, stratify=y)"],"metadata":{"id":"WVgVBdR5IFks","executionInfo":{"status":"ok","timestamp":1659429752759,"user_tz":-180,"elapsed":30,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}}},"execution_count":51,"outputs":[]},{"cell_type":"code","source":["X_train.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dHwmISswIFiu","executionInfo":{"status":"ok","timestamp":1659429752760,"user_tz":-180,"elapsed":30,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}},"outputId":"a763ba7e-8dec-48ad-8ede-ed743e43393c"},"execution_count":52,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1597, 2048)"]},"metadata":{},"execution_count":52}]},{"cell_type":"code","source":["X_test.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VeMO5gFVIFgu","executionInfo":{"status":"ok","timestamp":1659429752761,"user_tz":-180,"elapsed":25,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}},"outputId":"24e8aa12-54b4-4fd9-cb62-18deb2c3e5da"},"execution_count":53,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(533, 2048)"]},"metadata":{},"execution_count":53}]},{"cell_type":"code","source":["model=Sequential()\n","model.add(layers.Embedding(30000, 150, input_length=X_train.shape[1]))\n","model.add(layers.Conv1D(300, 16, activation=\"relu\"))\n","model.add(layers.MaxPooling1D(3))\n","model.add(layers.Flatten())\n","#model.add(layers.Dense(30, activation=\"relu\"))\n","model.add(layers.Dense(1, activation=\"sigmoid\"))\n","model.compile(loss=\"binary_crossentropy\", optimizer=\"adam\", metrics=[\"accuracy\"])"],"metadata":{"id":"wvVoytEZIFew","executionInfo":{"status":"ok","timestamp":1659429753160,"user_tz":-180,"elapsed":418,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}}},"execution_count":54,"outputs":[]},{"cell_type":"code","source":["model.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vs7yGFr-IFcg","executionInfo":{"status":"ok","timestamp":1659429753840,"user_tz":-180,"elapsed":696,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}},"outputId":"10e0ce0a-78d9-43a5-b7a4-ba388b8dd56e"},"execution_count":55,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," embedding (Embedding)       (None, 2048, 150)         4500000   \n","                                                                 \n"," conv1d (Conv1D)             (None, 2033, 300)         720300    \n","                                                                 \n"," max_pooling1d (MaxPooling1D  (None, 677, 300)         0         \n"," )                                                               \n","                                                                 \n"," flatten (Flatten)           (None, 203100)            0         \n","                                                                 \n"," dense (Dense)               (None, 1)                 203101    \n","                                                                 \n","=================================================================\n","Total params: 5,423,401\n","Trainable params: 5,423,401\n","Non-trainable params: 0\n","_________________________________________________________________\n"]}]},{"cell_type":"code","source":["#EarlyStopping\n","#ReduceLROnPlateau\n","#CSVLogger\n","from tensorflow import keras\n","from keras.callbacks import Callback, EarlyStopping, CSVLogger, ReduceLROnPlateau\n","\n","earlystopping=EarlyStopping(monitor=\"loss\", patience=2, mode=\"auto\")\n","reduceLrloss=ReduceLROnPlateau(monitor=\"loss\", factor=0.1, patiences=5, min_delta=1e-4, mode=\"min\")\n","Logger=CSVLogger(\"maob_training_data.csv\", append=True, separator=\",\")"],"metadata":{"id":"puzV1duA4suL","executionInfo":{"status":"ok","timestamp":1659429753842,"user_tz":-180,"elapsed":17,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}}},"execution_count":56,"outputs":[]},{"cell_type":"code","source":["model.fit(X_train,y_train, epochs=10, batch_size=16, callbacks=[earlystopping, reduceLrloss, Logger], validation_data=[X_test, y_test])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZVwvB2AXJuwp","executionInfo":{"status":"ok","timestamp":1659432417345,"user_tz":-180,"elapsed":2663519,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}},"outputId":"f24fe453-f835-4d67-dd61-cd272509cd4c"},"execution_count":57,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/10\n","100/100 [==============================] - 284s 3s/step - loss: 0.6544 - accuracy: 0.6055 - val_loss: 0.4552 - val_accuracy: 0.7899 - lr: 0.0010\n","Epoch 2/10\n","100/100 [==============================] - 264s 3s/step - loss: 0.4015 - accuracy: 0.8234 - val_loss: 0.3613 - val_accuracy: 0.8499 - lr: 0.0010\n","Epoch 3/10\n","100/100 [==============================] - 264s 3s/step - loss: 0.2595 - accuracy: 0.8992 - val_loss: 0.3514 - val_accuracy: 0.8724 - lr: 0.0010\n","Epoch 4/10\n","100/100 [==============================] - 265s 3s/step - loss: 0.1925 - accuracy: 0.9205 - val_loss: 0.3422 - val_accuracy: 0.8762 - lr: 0.0010\n","Epoch 5/10\n","100/100 [==============================] - 264s 3s/step - loss: 0.1319 - accuracy: 0.9530 - val_loss: 0.3836 - val_accuracy: 0.8649 - lr: 0.0010\n","Epoch 6/10\n","100/100 [==============================] - 264s 3s/step - loss: 0.1142 - accuracy: 0.9631 - val_loss: 0.4045 - val_accuracy: 0.8818 - lr: 0.0010\n","Epoch 7/10\n","100/100 [==============================] - 265s 3s/step - loss: 0.0772 - accuracy: 0.9731 - val_loss: 0.4607 - val_accuracy: 0.8799 - lr: 0.0010\n","Epoch 8/10\n","100/100 [==============================] - 264s 3s/step - loss: 0.0755 - accuracy: 0.9681 - val_loss: 0.4476 - val_accuracy: 0.8780 - lr: 0.0010\n","Epoch 9/10\n","100/100 [==============================] - 265s 3s/step - loss: 0.0556 - accuracy: 0.9800 - val_loss: 0.5072 - val_accuracy: 0.8818 - lr: 0.0010\n","Epoch 10/10\n","100/100 [==============================] - 264s 3s/step - loss: 0.0557 - accuracy: 0.9831 - val_loss: 0.4266 - val_accuracy: 0.8949 - lr: 0.0010\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7fd6a6443e10>"]},"metadata":{},"execution_count":57}]},{"cell_type":"code","source":["logs=pd.read_csv(\"maob_training_data.csv\")"],"metadata":{"id":"Yy9ridvD5xgr","executionInfo":{"status":"ok","timestamp":1659432417347,"user_tz":-180,"elapsed":37,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}}},"execution_count":58,"outputs":[]},{"cell_type":"code","source":["logs"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"ACe619JdE74W","executionInfo":{"status":"ok","timestamp":1659432417348,"user_tz":-180,"elapsed":17,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}},"outputId":"4e7d63cb-2761-4e43-a96b-0d82f9ac19ab"},"execution_count":59,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   epoch  accuracy      loss     lr  val_accuracy  val_loss\n","0      0  0.605510  0.654362  0.001      0.789869  0.455243\n","1      1  0.823419  0.401535  0.001      0.849906  0.361272\n","2      2  0.899186  0.259506  0.001      0.872420  0.351363\n","3      3  0.920476  0.192492  0.001      0.876173  0.342205\n","4      4  0.953037  0.131947  0.001      0.864916  0.383578\n","5      5  0.963056  0.114230  0.001      0.881801  0.404525\n","6      6  0.973074  0.077210  0.001      0.879925  0.460699\n","7      7  0.968065  0.075539  0.001      0.878049  0.447573\n","8      8  0.979962  0.055596  0.001      0.881801  0.507245\n","9      9  0.983093  0.055703  0.001      0.894934  0.426567"],"text/html":["\n","  <div id=\"df-cee545ca-979f-4a8f-8592-1bfda2e9105e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>epoch</th>\n","      <th>accuracy</th>\n","      <th>loss</th>\n","      <th>lr</th>\n","      <th>val_accuracy</th>\n","      <th>val_loss</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0.605510</td>\n","      <td>0.654362</td>\n","      <td>0.001</td>\n","      <td>0.789869</td>\n","      <td>0.455243</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>0.823419</td>\n","      <td>0.401535</td>\n","      <td>0.001</td>\n","      <td>0.849906</td>\n","      <td>0.361272</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>0.899186</td>\n","      <td>0.259506</td>\n","      <td>0.001</td>\n","      <td>0.872420</td>\n","      <td>0.351363</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>0.920476</td>\n","      <td>0.192492</td>\n","      <td>0.001</td>\n","      <td>0.876173</td>\n","      <td>0.342205</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>0.953037</td>\n","      <td>0.131947</td>\n","      <td>0.001</td>\n","      <td>0.864916</td>\n","      <td>0.383578</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>5</td>\n","      <td>0.963056</td>\n","      <td>0.114230</td>\n","      <td>0.001</td>\n","      <td>0.881801</td>\n","      <td>0.404525</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>6</td>\n","      <td>0.973074</td>\n","      <td>0.077210</td>\n","      <td>0.001</td>\n","      <td>0.879925</td>\n","      <td>0.460699</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>7</td>\n","      <td>0.968065</td>\n","      <td>0.075539</td>\n","      <td>0.001</td>\n","      <td>0.878049</td>\n","      <td>0.447573</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>8</td>\n","      <td>0.979962</td>\n","      <td>0.055596</td>\n","      <td>0.001</td>\n","      <td>0.881801</td>\n","      <td>0.507245</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>9</td>\n","      <td>0.983093</td>\n","      <td>0.055703</td>\n","      <td>0.001</td>\n","      <td>0.894934</td>\n","      <td>0.426567</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cee545ca-979f-4a8f-8592-1bfda2e9105e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-cee545ca-979f-4a8f-8592-1bfda2e9105e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-cee545ca-979f-4a8f-8592-1bfda2e9105e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":59}]},{"cell_type":"code","source":["predicted = (model.predict(X_test) > 0.5).astype(\"int32\")"],"metadata":{"id":"qlssPr20rBIp","executionInfo":{"status":"ok","timestamp":1659432440469,"user_tz":-180,"elapsed":23134,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}}},"execution_count":60,"outputs":[]},{"cell_type":"code","source":["!pip install pycm "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"J3T_HskEJusD","executionInfo":{"status":"ok","timestamp":1659432445303,"user_tz":-180,"elapsed":4860,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}},"outputId":"cb4cf24b-5b20-4918-bd56-70719acb286e"},"execution_count":61,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting pycm\n","  Downloading pycm-3.5-py2.py3-none-any.whl (66 kB)\n","\u001b[K     |████████████████████████████████| 66 kB 3.0 MB/s \n","\u001b[?25hRequirement already satisfied: numpy>=1.9.0 in /usr/local/lib/python3.7/dist-packages (from pycm) (1.21.6)\n","Collecting art>=1.8\n","  Downloading art-5.7-py2.py3-none-any.whl (592 kB)\n","\u001b[K     |████████████████████████████████| 592 kB 16.2 MB/s \n","\u001b[?25hInstalling collected packages: art, pycm\n","Successfully installed art-5.7 pycm-3.5\n"]}]},{"cell_type":"code","source":["from pycm import *\n","print(ConfusionMatrix(y_test.reshape(-1), predicted.reshape(-1)))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SmZGz1CtJuoi","executionInfo":{"status":"ok","timestamp":1659432445665,"user_tz":-180,"elapsed":405,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}},"outputId":"e11f3e9b-77e7-4e49-94ba-58a3745d2134"},"execution_count":62,"outputs":[{"output_type":"stream","name":"stdout","text":["Predict   0         1         \n","Actual\n","0         234       33        \n","\n","1         23        243       \n","\n","\n","\n","\n","\n","Overall Statistics : \n","\n","95% CI                                                            (0.8689,0.92097)\n","ACC Macro                                                         0.89493\n","ARI                                                               0.62319\n","AUNP                                                              0.89497\n","AUNU                                                              0.89497\n","Bangdiwala B                                                      0.80125\n","Bennett S                                                         0.78987\n","CBA                                                               0.87842\n","CSI                                                               0.79044\n","Chi-Squared                                                       333.01537\n","Chi-Squared DF                                                    1\n","Conditional Entropy                                               0.48219\n","Cramer V                                                          0.79044\n","Cross Entropy                                                     1.00101\n","F1 Macro                                                          0.8949\n","F1 Micro                                                          0.89493\n","FNR Macro                                                         0.10503\n","FNR Micro                                                         0.10507\n","FPR Macro                                                         0.10503\n","FPR Micro                                                         0.10507\n","Gwet AC1                                                          0.78993\n","Hamming Loss                                                      0.10507\n","Joint Entropy                                                     1.48219\n","KL Divergence                                                     0.00102\n","Kappa                                                             0.78988\n","Kappa 95% CI                                                      (0.73782,0.84194)\n","Kappa No Prevalence                                               0.78987\n","Kappa Standard Error                                              0.02656\n","Kappa Unbiased                                                    0.78981\n","Krippendorff Alpha                                                0.79001\n","Lambda A                                                          0.78947\n","Lambda B                                                          0.7821\n","Mutual Information                                                0.51689\n","NIR                                                               0.50094\n","Overall ACC                                                       0.89493\n","Overall CEN                                                       0.44414\n","Overall J                                                         (1.61961,0.8098)\n","Overall MCC                                                       0.79044\n","Overall MCEN                                                      0.35423\n","Overall RACC                                                      0.49997\n","Overall RACCU                                                     0.50014\n","P-Value                                                           0.0\n","PPV Macro                                                         0.89547\n","PPV Micro                                                         0.89493\n","Pearson C                                                         0.62011\n","Phi-Squared                                                       0.62479\n","RCI                                                               0.51689\n","RR                                                                266.5\n","Reference Entropy                                                 1.0\n","Response Entropy                                                  0.99908\n","SOA1(Landis & Koch)                                               Substantial\n","SOA2(Fleiss)                                                      Excellent\n","SOA3(Altman)                                                      Good\n","SOA4(Cicchetti)                                                   Excellent\n","SOA5(Cramer)                                                      Strong\n","SOA6(Matthews)                                                    Strong\n","Scott PI                                                          0.78981\n","Standard Error                                                    0.01328\n","TNR Macro                                                         0.89497\n","TNR Micro                                                         0.89493\n","TPR Macro                                                         0.89497\n","TPR Micro                                                         0.89493\n","Zero-one Loss                                                     56\n","\n","Class Statistics :\n","\n","Classes                                                           0             1             \n","ACC(Accuracy)                                                     0.89493       0.89493       \n","AGF(Adjusted F-score)                                             0.88494       0.90509       \n","AGM(Adjusted geometric mean)                                      0.90102       0.88864       \n","AM(Difference between automatic and manual classification)        -10           10            \n","AUC(Area under the ROC curve)                                     0.89497       0.89497       \n","AUCI(AUC value interpretation)                                    Very Good     Very Good     \n","AUPR(Area under the PR curve)                                     0.89346       0.89698       \n","BCD(Bray-Curtis dissimilarity)                                    0.00938       0.00938       \n","BM(Informedness or bookmaker informedness)                        0.78994       0.78994       \n","CEN(Confusion entropy)                                            0.44917       0.43929       \n","DOR(Diagnostic odds ratio)                                        74.917        74.917        \n","DP(Discriminant power)                                            1.03351       1.03351       \n","DPI(Discriminant power interpretation)                            Limited       Limited       \n","ERR(Error rate)                                                   0.10507       0.10507       \n","F0.5(F0.5 score)                                                  0.90347       0.88686       \n","F1(F1 score - harmonic mean of precision and sensitivity)         0.89313       0.89668       \n","F2(F2 score)                                                      0.88302       0.90672       \n","FDR(False discovery rate)                                         0.08949       0.11957       \n","FN(False negative/miss/type 2 error)                              33            23            \n","FNR(Miss rate or false negative rate)                             0.1236        0.08647       \n","FOR(False omission rate)                                          0.11957       0.08949       \n","FP(False positive/type 1 error/false alarm)                       23            33            \n","FPR(Fall-out or false positive rate)                              0.08647       0.1236        \n","G(G-measure geometric mean of precision and sensitivity)          0.89329       0.89683       \n","GI(Gini index)                                                    0.78994       0.78994       \n","GM(G-mean geometric mean of specificity and sensitivity)          0.89478       0.89478       \n","IBA(Index of balanced accuracy)                                   0.7709        0.83035       \n","ICSI(Individual classification success index)                     0.78691       0.79397       \n","IS(Information score)                                             0.86204       0.819         \n","J(Jaccard index)                                                  0.8069        0.81271       \n","LS(Lift score)                                                    1.8176        1.76418       \n","MCC(Matthews correlation coefficient)                             0.79044       0.79044       \n","MCCI(Matthews correlation coefficient interpretation)             Strong        Strong        \n","MCEN(Modified confusion entropy)                                  0.64679       0.63558       \n","MK(Markedness)                                                    0.79094       0.79094       \n","N(Condition negative)                                             266           267           \n","NLR(Negative likelihood ratio)                                    0.13529       0.09866       \n","NLRI(Negative likelihood ratio interpretation)                    Fair          Good          \n","NPV(Negative predictive value)                                    0.88043       0.91051       \n","OC(Overlap coefficient)                                           0.91051       0.91353       \n","OOC(Otsuka-Ochiai coefficient)                                    0.89329       0.89683       \n","OP(Optimized precision)                                           0.87419       0.87419       \n","P(Condition positive or support)                                  267           266           \n","PLR(Positive likelihood ratio)                                    10.13581      7.39132       \n","PLRI(Positive likelihood ratio interpretation)                    Good          Fair          \n","POP(Population)                                                   533           533           \n","PPV(Precision or positive predictive value)                       0.91051       0.88043       \n","PRE(Prevalence)                                                   0.50094       0.49906       \n","Q(Yule Q - coefficient of colligation)                            0.97366       0.97366       \n","QI(Yule Q interpretation)                                         Strong        Strong        \n","RACC(Random accuracy)                                             0.24154       0.25843       \n","RACCU(Random accuracy unbiased)                                   0.24163       0.25851       \n","TN(True negative/correct rejection)                               243           234           \n","TNR(Specificity or true negative rate)                            0.91353       0.8764        \n","TON(Test outcome negative)                                        276           257           \n","TOP(Test outcome positive)                                        257           276           \n","TP(True positive/hit)                                             234           243           \n","TPR(Sensitivity, recall, hit rate, or true positive rate)         0.8764        0.91353       \n","Y(Youden index)                                                   0.78994       0.78994       \n","dInd(Distance index)                                              0.15084       0.15084       \n","sInd(Similarity index)                                            0.89334       0.89334       \n","\n"]}]},{"cell_type":"code","source":["model.save('maob')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UALCcOPFr3DF","executionInfo":{"status":"ok","timestamp":1659432446578,"user_tz":-180,"elapsed":918,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}},"outputId":"1101f94d-cdd8-4b69-dd7c-486572f9f17f"},"execution_count":63,"outputs":[{"output_type":"stream","name":"stdout","text":["INFO:tensorflow:Assets written to: maob/assets\n"]}]},{"cell_type":"code","source":["!zip -r /content/maob.zip /content/maob"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Wf8pZyF7r3Ag","executionInfo":{"status":"ok","timestamp":1659432449132,"user_tz":-180,"elapsed":2560,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}},"outputId":"489d4d63-7d5a-4b31-9f25-3e2ccfbb34d8"},"execution_count":64,"outputs":[{"output_type":"stream","name":"stdout","text":["  adding: content/maob/ (stored 0%)\n","  adding: content/maob/keras_metadata.pb (deflated 87%)\n","  adding: content/maob/assets/ (stored 0%)\n","  adding: content/maob/saved_model.pb (deflated 87%)\n","  adding: content/maob/variables/ (stored 0%)\n","  adding: content/maob/variables/variables.data-00000-of-00001 (deflated 59%)\n","  adding: content/maob/variables/variables.index (deflated 59%)\n"]}]},{"cell_type":"code","source":["from google.colab import files\n","files.download(\"/content/maob.zip\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"wnB8OGF_r2-0","executionInfo":{"status":"ok","timestamp":1659432449133,"user_tz":-180,"elapsed":12,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}},"outputId":"4499fa57-53e3-4dc5-8fab-139040aad7ee"},"execution_count":65,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["download(\"download_f00b6da2-667c-4ce1-be10-e9695471a460\", \"maob.zip\", 26585156)"]},"metadata":{}}]},{"cell_type":"code","source":["from tensorflow import keras\n","model2=keras.models.load_model(\"maob\")"],"metadata":{"id":"TjSIBCBMr28d","executionInfo":{"status":"ok","timestamp":1659432449526,"user_tz":-180,"elapsed":401,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}}},"execution_count":66,"outputs":[]},{"cell_type":"code","source":["!pip install pycm"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"m3feJNRGbARK","executionInfo":{"status":"ok","timestamp":1659432455852,"user_tz":-180,"elapsed":6333,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}},"outputId":"d8fa4764-6c7f-498d-b18a-b7a0c291d364"},"execution_count":67,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: pycm in /usr/local/lib/python3.7/dist-packages (3.5)\n","Requirement already satisfied: numpy>=1.9.0 in /usr/local/lib/python3.7/dist-packages (from pycm) (1.21.6)\n","Requirement already satisfied: art>=1.8 in /usr/local/lib/python3.7/dist-packages (from pycm) (5.7)\n"]}]},{"cell_type":"code","source":["from pycm import *\n","print(ConfusionMatrix(y_test.reshape(-1), predictions.reshape(-1)))"],"metadata":{"id":"EgJt_wh0r26s","colab":{"base_uri":"https://localhost:8080/","height":182},"executionInfo":{"status":"error","timestamp":1659432457265,"user_tz":-180,"elapsed":1438,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}},"outputId":"8700b861-7db2-44d4-8c65-da4dc8b63f77"},"execution_count":68,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-68-87039d0e75be>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mpycm\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mConfusionMatrix\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my_test\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreshape\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpredictions\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreshape\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'predictions' is not defined"]}]},{"cell_type":"code","source":["reduceLrloss=ReduceLROnPlateau(monitor=\"loss\", factor=0.1, patience=5, min_delta=1e-4, mode=\"min\")"],"metadata":{"id":"91zGoLehR9Le","executionInfo":{"status":"aborted","timestamp":1659432456840,"user_tz":-180,"elapsed":996,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["Logger=CSVLogger(\"maob_training_data.csv\", append=True, separator=\",\")"],"metadata":{"id":"Rw52rEHJk9J4","executionInfo":{"status":"aborted","timestamp":1659432456841,"user_tz":-180,"elapsed":997,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["logs=pd.read_csv(\"maob_training_data.csv\")"],"metadata":{"id":"hyiF6eBlkaGx","executionInfo":{"status":"aborted","timestamp":1659432456842,"user_tz":-180,"elapsed":997,"user":{"displayName":"Yassir B.","userId":"16892896183514751590"}}},"execution_count":null,"outputs":[]}],"metadata":{"colab":{"collapsed_sections":[],"name":"cnn_fingerprints_vs","provenance":[{"file_id":"1SZ5F-qH4emm_heMpL4yrlsHEwgdM-NuF","timestamp":1659281172630},{"file_id":"/v2/external/notebooks/intro.ipynb","timestamp":1658829427107}]},"kernelspec":{"display_name":"Python 3","name":"python3"},"gpuClass":"standard"},"nbformat":4,"nbformat_minor":0}